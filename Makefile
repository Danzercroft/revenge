# Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º Revenge –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

# ==============================================
# –ü–ï–†–ï–ú–ï–ù–ù–´–ï
# ==============================================
DOCKER_COMPOSE = docker-compose
DOCKER = docker
APP_CONTAINER = revenge_app
DB_CONTAINER = revenge_postgres
NGINX_CONTAINER = revenge_nginx

.PHONY: help build up down restart logs shell db-shell nginx-shell clean install migrate seed fresh test phpstan

# ==============================================
# –°–ü–†–ê–í–ö–ê
# ==============================================
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è Revenge –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

# ==============================================
# –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´ DOCKER
# ==============================================
build: ## –°–æ–±—Ä–∞—Ç—å –≤—Å–µ Docker –æ–±—Ä–∞–∑—ã
	$(DOCKER_COMPOSE) build --no-cache

up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	$(DOCKER_COMPOSE) up -d

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	$(DOCKER_COMPOSE) down

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	$(DOCKER_COMPOSE) restart

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	$(DOCKER_COMPOSE) logs -f

logs-app: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	$(DOCKER_COMPOSE) logs -f app

logs-nginx: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Nginx
	$(DOCKER_COMPOSE) logs -f nginx

logs-postgres: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ PostgreSQL
	$(DOCKER_COMPOSE) logs -f postgres

# ==============================================
# SHELL –î–û–°–¢–£–ü
# ==============================================
shell: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	$(DOCKER_COMPOSE) exec app sh

db-shell: ## –í–æ–π—Ç–∏ –≤ PostgreSQL
	$(DOCKER_COMPOSE) exec postgres psql -U revenge_user -d revenge

nginx-shell: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä Nginx
	$(DOCKER_COMPOSE) exec nginx sh

# ==============================================
# –£–°–¢–ê–ù–û–í–ö–ê –ò –ù–ê–°–¢–†–û–ô–ö–ê
# ==============================================
install: ## –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (—Å–±–æ—Ä–∫–∞ + –∑–∞–ø—É—Å–∫ + –º–∏–≥—Ä–∞—Ü–∏–∏)
	make build
	make up
	sleep 10
	make migrate
	make key-generate
	@echo "üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost"

fresh-install: ## –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–æ—á–∏—Å—Ç–∫–∞ + —É—Å—Ç–∞–Ω–æ–≤–∫–∞)
	make clean
	make install

# ==============================================
# LARAVEL –ö–û–ú–ê–ù–î–´
# ==============================================
migrate: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	$(DOCKER_COMPOSE) exec app php artisan migrate --force

migrate-fresh: ## –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ë–î —Å —Å–∏–¥–∞–º–∏
	$(DOCKER_COMPOSE) exec app php artisan migrate:fresh --seed --force

seed: ## –ó–∞–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
	$(DOCKER_COMPOSE) exec app php artisan db:seed --force

key-generate: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	$(DOCKER_COMPOSE) exec app php artisan key:generate --force

cache-clear: ## –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	$(DOCKER_COMPOSE) exec app php artisan cache:clear
	$(DOCKER_COMPOSE) exec app php artisan config:clear
	$(DOCKER_COMPOSE) exec app php artisan route:clear
	$(DOCKER_COMPOSE) exec app php artisan view:clear

optimize: ## –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è production
	$(DOCKER_COMPOSE) exec app php artisan config:cache
	$(DOCKER_COMPOSE) exec app php artisan route:cache
	$(DOCKER_COMPOSE) exec app php artisan view:cache
	$(DOCKER_COMPOSE) exec app composer dump-autoload --optimize

# ==============================================
# –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò –ê–ù–ê–õ–ò–ó
# ==============================================
test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	$(DOCKER_COMPOSE) exec app php artisan test

phpstan: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å PHPStan –∞–Ω–∞–ª–∏–∑
	$(DOCKER_COMPOSE) exec app ./vendor/bin/phpstan analyse --memory-limit=2G

phpstan-baseline: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å PHPStan baseline
	$(DOCKER_COMPOSE) exec app ./vendor/bin/phpstan analyse --generate-baseline phpstan-baseline.neon --memory-limit=2G

# ==============================================
# –†–ê–ë–û–¢–ê –° –§–†–û–ù–¢–ï–ù–î–û–ú
# ==============================================
npm-install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	$(DOCKER_COMPOSE) exec app npm install

npm-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ dev —Ä–µ–∂–∏–º–µ
	$(DOCKER_COMPOSE) exec app npm run dev

npm-build: ## –°–æ–±—Ä–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–ª—è production
	$(DOCKER_COMPOSE) exec app npm run build

# ==============================================
# –û–ß–ò–°–¢–ö–ê –ò –û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–ï
# ==============================================
clean: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –æ–±—Ä–∞–∑—ã, —Ç–æ–º–∞)
	$(DOCKER_COMPOSE) down -v --rmi all --remove-orphans
	$(DOCKER) system prune -f

clean-containers: ## –£–¥–∞–ª–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	$(DOCKER_COMPOSE) down --remove-orphans

clean-volumes: ## –£–¥–∞–ª–∏—Ç—å —Ç–æ–º–∞ (–û–°–¢–û–†–û–ñ–ù–û: —É–¥–∞–ª—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –ë–î!)
	$(DOCKER_COMPOSE) down -v

# ==============================================
# –ú–û–ù–ò–¢–û–†–ò–ù–ì
# ==============================================
status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	$(DOCKER_COMPOSE) ps

stats: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Å—É—Ä—Å–æ–≤
	$(DOCKER) stats

# ==============================================
# BACKUP –ò RESTORE
# ==============================================
db-backup: ## –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î
	@mkdir -p ./backups
	$(DOCKER_COMPOSE) exec postgres pg_dump -U revenge_user revenge > ./backups/backup_$(shell date +%Y%m%d_%H%M%S).sql
	@echo "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ ./backups/"

db-restore: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ë–î –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ (—É–∫–∞–∑–∞—Ç—å —Ñ–∞–π–ª: make db-restore FILE=backup.sql)
	$(DOCKER_COMPOSE) exec -T postgres psql -U revenge_user -d revenge < ./backups/$(FILE)

# ==============================================
# –†–ê–ó–†–ê–ë–û–¢–ö–ê
# ==============================================
dev-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	cp .env.example .env
	$(DOCKER_COMPOSE) up -d
	make npm-install
	make migrate
	@echo "üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≥–æ—Ç–æ–≤!"

prod-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ production —Ä–µ–∂–∏–º–µ
	cp .env.docker .env
	make build
	make up
	make migrate
	make optimize
	@echo "üöÄ Production —Ä–µ–∂–∏–º –≥–æ—Ç–æ–≤!"
